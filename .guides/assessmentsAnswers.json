[
 {
  "taskId": "test-2633892246",
  "points": 0,
  "results": [
   {
    "guidance": "Here is one possible solution:\n\n```python\nimport unittest\nfrom circle import circle_area\nfrom math import pi\n\nclass TestCircleArea(unittest.TestCase):\n  def test_area(self):\n    self.assertAlmostEqual(circle_area(1), pi)\n    self.assertAlmostEqual(circle_area(0), 0)\n    self.assertAlmostEqual(circle_area(2.1), pi * 2.1 ** 2)\n    \n  def test_values(self):\n    self.assertRaises(ValueError, circle_area, -2)\n    \n  def test_types(self):\n    self.assertRaises(TypeError, circle_area, 3+5j)\n    self.assertRaises(TypeError, circle_area, True)\n    self.assertRaises(TypeError, circle_area, \"radius\")\n```\n\nYour test should test several valid radii. In addition, check fora **value error** when a negative number is passed to `circle_area`. Lastly, check for a **type error** when the wrong data type is passed to `circle_area`.",
    "format": null,
    "output": "test_area (test_circle_area.TestCircleArea) ... ok\ntest_types (test_circle_area.TestCircleArea) ... FAIL\ntest_values (test_circle_area.TestCircleArea) ... FAIL\n\n======================================================================\nFAIL: test_types (test_circle_area.TestCircleArea)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/codio/workspace/.guides/secure/test_circle_area.py\", line 18, in test_types\n    self.assertRaises(TypeError, circle_area, 3+5j)\nAssertionError: TypeError not raised by circle_area\n\n======================================================================\nFAIL: test_values (test_circle_area.TestCircleArea)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/codio/workspace/.guides/secure/test_circle_area.py\", line 15, in test_values\n    self.assertRaises(ValueError, circle_area, -2)\nAssertionError: ValueError not raised by circle_area\n\n----------------------------------------------------------------------\nRan 3 tests in 0.001s\n\nFAILED (failures=2)\n",
    "timestamp": 1603291405948,
    "state": "fail"
   }
  ]
 }
]